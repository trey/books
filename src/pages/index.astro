---
import Layout from "../layouts/Layout.astro";
import { DATA_URL, getSecret } from "astro:env/server";

const response = await fetch(getSecret("DATA_URL"));
const data = await response.json();
// import data from "../books.json";
---

<script>
  document.querySelector("html").classList.remove("no-js");
  document.querySelector("html").classList.add("has-js");

  // Restore selected source and query from localStorage
  const selectedSource = localStorage.getItem("tp-selectedSource");

  const urlParams = new URLSearchParams(window.location.search);
  const q = urlParams.get("q");
  const query = q ? q : localStorage.getItem("tp-query");

  const radio = document.querySelector(`input[name=source][value=${selectedSource}]`);
  if (radio) {
    radio.checked = true;
  } else {
    // Select the first option
    document.querySelectorAll("input[name=source]")[0].checked = true;
  }

  const input = document.querySelector("input[name=q]");
  if (input) {
    input.value = query;
  }

  document.querySelector("form.js input[name=q]").focus();

  document.querySelector("form.js").addEventListener("submit", (e) => {
    e.preventDefault();
    const baseForm = e.target;
    const query = baseForm.querySelector("input[name=q]").value;
    const source = baseForm.querySelector("input[name=source]:checked").value;
    const form = document.querySelector("#form_" + source);
    form.querySelector("input[type=search]").value = query;

    // Save selected source and query in localStorage
    localStorage.setItem("tp-selectedSource", source);
    localStorage.setItem("tp-query", query);

    switch (source) {
      case "morrill":
        const morrillUrl = form.querySelector("input[name=url]").value;
        window.location.href = `${morrillUrl}&term=${query}`;
        break;
      case "libby":
        const escapedQuery = encodeURIComponent(query);
        const libbyUrl = `https://libbyapp.com/search/nh/search/query-${escapedQuery}/page-1`;
        window.location.href = libbyUrl;
        break;
      default:
        form.submit();
    }
  });
</script>

<Layout>
  <form class="js">
    <div class="form-wrapper mb-10 flex justify-between items-stretch gap-2">
      <input type="search" name="q" class="border-2 border-sky-300 dark:border-white text-black bg-white p-3 rounded-md grow text">
      <button class="rounded-md bg-sky-500 hover:bg-sky-800 focus:bg-sky-800 dark:bg-sky-700 dark:hover:bg-sky-600 cursor-pointer text-white px-5">Search</button>
    </div>

    <ul class="space-y-4">
      {
        Object.entries(data).map(([category, items]) => (
          <li class="mb-8">
            <h3 class="font-bold mb-2 text-lg capitalize text-sky-400 dark:text-sky-600">{category}</h3>
            <ul class="space-y-2">
              {Array.isArray(items) ? (
                items.map((item) => (
                  <li>
                    <label class="block px-4 py-2 rounded-md">
                      <input class="hidden" type="radio" name="source" value={item.slug}>
                      {item.name}
                    </label>
                  </li>
                ))
              ) : (
                <li>No items available</li>
              )}
            </ul>
          </li>
        ))
      }
    </ul>

    <button class="block mt-10 w-full p-4 rounded-md bg-sky-500 hover:bg-sky-800 focus:bg-sky-800 dark:bg-sky-700 dark:hover:bg-sky-600 cursor-pointer text-white px-5">Search</button>
  </form>

  <ul class="no-js">
    {
      Object.entries(data).map(([category, items]) => (
        <li class="mb-8">
          <h3 class="font-bold text-lg capitalize">{category}</h3>
          <ul class="space-y-1">
            {Array.isArray(items) ? (
              items.map((item) => (
                <li>
                  {item.url ? (
                    <a class="underline" href={item.url}>
                      {item.name}
                    </a>
                  ) : (
                    item.name
                  )}
                  <form class="space-y-6" id={`form_${item.slug}`} action={item.action}>
                    <input type="hidden" name="url" value={item.url}>
                    {item.slug === "norwich" && (
                      <>
                        <input type="hidden" name="searchtype" value="keyword">
                        <input type="hidden" name="qs_file" value="">
                        <input type="hidden" name="q" value="h.tviewer">
                        <input type="hidden" name="using_sb" value="status">
                        <input type="hidden" name="qsb" value="keyword">
                      </>
                    )}
                    <input class="bg-white text-black p-2" type="search" name={item.field ? item.field : "q"} required placeholder={ item.slug === "libby" ? "JavaScript Required" : "" } disabled={item.slug === "libby"}>
                    <button class="bg-sky-600 hover:bg-sky-700 text-white p-2 cursor-pointer" disabled={item.slug === "libby"}>Search</button>
                  </form>
                </li>
              ))
            ) : (
              <li>No items available</li>
            )}
          </ul>
        </li>
      ))
    }
  </ul>
</Layout>
